from __future__ import annotations
from pydantic import BaseModel, Field
from typing import List
from typing import Optional
from datetime import datetime

from resources.rest_models import Link


class AdoptionCreate(BaseModel):
    petId: str
    adopterId: str

    class Config:
        json_schema_extra = {
            "examples": [
                {
                    "petId": "pid_1",
                    "adopterId": "uid_1"
                }
            ]
        }


class AdoptionUpdate(BaseModel):
    status: str

    class Config:
        json_schema_extra = {
            "examples": [
                {
                    "status": "approved"
                }
            ]
        }



class AdoptionRspModel(AdoptionCreate):
    adoptionId: str
    status: Optional[str] = None
    createdAt: Optional[str] = None  # Assume these fields are generated by the server
    updatedAt: Optional[str] = None
    links: Optional[List[Link]] = []

    class Config:
        schema_extra = {
            "examples": [
                {
                    "adoptionId": "aid_1",
                    "petId": "pid_1",
                    "adopterId": "uid_1",
                    "status": "pending",
                    "createdAt": "2023-10-18T12:34:56.789000",
                    "updatedAt": "2023-10-18T12:34:56.789000",
                    "links": [
                        {
                            "href": "/adoptions/aid_1",
                            "rel": "self",
                            "type": "GET"
                        }
                    ]
                }
            ]
        }